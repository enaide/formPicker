[{"D:\\develop\\project-reacjs\\handling hooks\\src\\index.js":"1","D:\\develop\\project-reacjs\\handling hooks\\src\\App.js":"2","D:\\develop\\project-reacjs\\handling hooks\\src\\store\\auth-context.js":"3","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\Home\\Home.js":"4","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\Login\\Login.js":"5","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\MainHeader\\MainHeader.js":"6","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\MainHeader\\Navigation.js":"7","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\UI\\Card\\Card.js":"8","D:\\develop\\project-reacjs\\handling hooks\\src\\components\\UI\\Button\\Button.js":"9","D:\\develop\\project-reacjs\\prueba\\src\\index.js":"10","D:\\develop\\project-reacjs\\prueba\\src\\App.js":"11","D:\\develop\\project-reacjs\\prueba\\src\\components\\Login\\Login.js":"12","D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\Button\\Button.js":"13","D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\Card\\Card.js":"14","D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\RadioButton\\RadioButton.js":"15","D:\\develop\\project-reacjs\\prueba\\src\\hooks\\use-inputs.js":"16","D:\\develop\\project-reacjs\\prueba\\src\\store\\space-slice.js":"17","D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\RadioCard\\RadioCard.js":"18"},{"size":272,"mtime":1649826806201,"results":"19","hashOfConfig":"20"},{"size":486,"mtime":1650370878619,"results":"21","hashOfConfig":"20"},{"size":1053,"mtime":1649826311384,"results":"22","hashOfConfig":"20"},{"size":347,"mtime":1650371026894,"results":"23","hashOfConfig":"20"},{"size":3189,"mtime":1650373552804,"results":"24","hashOfConfig":"20"},{"size":309,"mtime":1650373242913,"results":"25","hashOfConfig":"20"},{"size":668,"mtime":1649823711313,"results":"26","hashOfConfig":"20"},{"size":218,"mtime":1616593928000,"results":"27","hashOfConfig":"20"},{"size":353,"mtime":1616593928000,"results":"28","hashOfConfig":"20"},{"size":299,"mtime":1650892014678,"results":"29","hashOfConfig":"30"},{"size":324,"mtime":1650910881341,"results":"31","hashOfConfig":"30"},{"size":11906,"mtime":1650906657475,"results":"32","hashOfConfig":"30"},{"size":353,"mtime":1616593928000,"results":"33","hashOfConfig":"30"},{"size":218,"mtime":1616593928000,"results":"34","hashOfConfig":"30"},{"size":3061,"mtime":1650913137330,"results":"35","hashOfConfig":"30"},{"size":962,"mtime":1650902294126,"results":"36","hashOfConfig":"30"},{"size":2325,"mtime":1650906533745,"results":"37","hashOfConfig":"30"},{"size":1191,"mtime":1650890768767,"results":"38","hashOfConfig":"30"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1kfj0wb",{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},"mitj6a",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"59"},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"59"},"D:\\develop\\project-reacjs\\handling hooks\\src\\index.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\App.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\store\\auth-context.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\Home\\Home.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\Login\\Login.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\MainHeader\\MainHeader.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\MainHeader\\Navigation.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\UI\\Card\\Card.js",[],"D:\\develop\\project-reacjs\\handling hooks\\src\\components\\UI\\Button\\Button.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\index.js",[],["78","79"],"D:\\develop\\project-reacjs\\prueba\\src\\App.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\components\\Login\\Login.js",["80","81"],"import React, {\n  useState,\n  useEffect,  \n  useRef,\n} from \"react\";\nimport Button from \"@mui/material/Button\";\nimport ToggleButton from \"@mui/material/ToggleButton\";\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\nimport TextField from \"@mui/material/TextField\";\nimport InputAdornment from '@mui/material/InputAdornment';\n\nimport OutboxIcon from \"@mui/icons-material/Outbox\";\n\nimport classes from \"./Login.module.css\";\nimport warning from \"./warning.svg\";\n\nimport Card from \"../UI/Card/Card\";\n// import upload from './upload.svg';\n\nimport RadioButton from \"../UI/RadioButton/RadioButton\";\n// import useInput from \"../../hooks/use-inputs\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { formActions, spaceActions, urlActions } from \"../../store/space-slice\";\nimport RadioCard from \"../UI/RadioCard/RadioCard\";\n\nconst isNotEmpty = (value) => value.trim() !== \"\";\n\nconst Login = (props) => {\n  const [formIsValid, setFormIsValid] = useState(false);\n  const dispatch = useDispatch();\n  \n\n  const spaceValue = useSelector(state => state.space.inputValue);\n  const spaceIsValid = useSelector(state => state.space.isValid);\n  const spaceError = useSelector(state => state.space.hasError);\n  \n  const urlValue = useSelector(state => state.url.inputValue);\n  const urlIsValid = useSelector(state => state.url.isValid);\n  const urlError = useSelector(state => state.url.hasError);\n  \n  const imageSpace = useSelector((state) => state.form.image);\n  const peopleNumber = useSelector((state) => state.form.people);  \n  const privacy = useSelector((state) => state.form.privacy);  \n\n  const [selectedValue, setSelectedValue] = useState(\"#39B0FF\");\n\n  const uploadInputRef = useRef(null);\n\n  const controlProps = (item) => ({\n    color: item,\n    fontSize: 28,\n    checked: selectedValue === item,\n    onChange: handleChange,\n    value: item,\n    name: \"color-radio-button\",\n    inputProps: { \"aria-label\": item },\n  });\n\n  const controlCardPro = (item) => ({\n    color: item,\n    // fontSize: 60,\n    checked: privacy === item,\n    onChange: handlePrivacyChange,\n    value: item,\n    name: \"color-radio-button\",\n    inputProps: { \"aria-label\": item },\n  });\n\n  useEffect(() => {\n    console.log({formIsValid: {spaceIsValid, urlIsValid}});\n    setFormIsValid(spaceIsValid && urlIsValid);\n  }, [spaceIsValid, urlIsValid]);\n\n  const spaceChangeHandler = event => {\n      dispatch(spaceActions.valueChangeHandler(event.target.value));\n  };\n\n  const spaceBlurHandler = event => {\n      dispatch(dispatch(spaceActions.inputBlurHandler()));\n  };\n\n  const urlChangeHandler = event => {\n      dispatch(urlActions.valueChangeHandler(event.target.value));\n  };\n\n  const urlBlurHandler = event => {\n      dispatch(dispatch(urlActions.inputBlurHandler()));\n  };\n\n  const reset = ()=> {\n      dispatch(dispatch(spaceActions.reset()));\n  };\n\n  const peopleNumberHandler = (event, people) => {\n    if (people !== null) {\n      dispatch(formActions.onPeopleNumberHandler(people))      \n    }\n  };\n\n  const handleChange = (event) => {\n    setSelectedValue(event.target.value);\n  };\n\n  const handlePrivacyChange = (event) => {    \n    dispatch(formActions.onPrivacyChangeHandler(event.target.value))\n  };\n\n  const onImageChange = (event) => {\n    if (event.target.files && event.target.files[0]) {\n      let img = event.target.files[0];\n      dispatch(formActions.onImageChangeHandler(URL.createObjectURL(img)));\n    }\n  };\n\n  const submitHandler = (event) => {\n    event.preventDefault();\n\n    console.log({result: {imageSpace, spaceValue, urlValue,peopleNumber, privacy, selectedValue}})\n    // console.log({ s: spaceError, u: urlError });\n    // resetSpace();\n    // resetUrl();\n    // dispatch(spaceActions.reset())\n  };\n\n  return (\n    <Card className={classes.login}>\n      <form onSubmit={submitHandler}>\n        <section className={classes.header}>\n          <h1 className={classes.title}>Configuración</h1>\n          <p className={classes.title}>Logo del espacio</p>\n\n          <div className={classes[\"container-upload\"]}>\n            <input\n              ref={uploadInputRef}\n              type=\"file\"\n              accept=\"image/*\"\n              style={{ display: \"none\" }}\n              onChange={onImageChange}\n            />\n            {!imageSpace && (\n              <div className={classes[\"container-logo\"]}>\n                <span className={classes.logo}>B</span>\n              </div>\n            )}\n            {imageSpace && (\n              <div className={classes[\"container-logo\"]}>\n                <img\n                  alt=\"not fount\"\n                  width={\"67px\"}\n                  height={\"67px\"}\n                  src={imageSpace}\n                />\n              </div>\n            )}\n            <Button\n              color=\"inherit\"\n              variant=\"outlined\"\n              startIcon={<OutboxIcon />}\n              onClick={() =>\n                uploadInputRef.current && uploadInputRef.current.click()\n              }\n            >\n              Subir logo\n            </Button>\n          </div>\n        </section>\n\n        <section className={classes.info}>\n          <img src={warning} alt=\"logo\" />\n          <div className={classes.warning}>\n            <p>Este logo identificará tu espacio entre el resto.</p>\n            <p>\n              Preferiblemente sube una imagen .png igual o superior a 65px a\n              72ppp con fondo trasparente.\n            </p>\n          </div>\n        </section>\n\n        <div className={`${classes.control} ${spaceError ? classes.invalid : \"\"}`} >\n          <label htmlFor=\"space\">Nombre del espacio</label>\n          <TextField\n            id=\"space\"\n            type=\"text\"\n            placeholder=\"Ep: Mi espacio de trabajo\"\n            variant=\"outlined\"\n            fullWidth\n            value={spaceValue}\n            onChange={spaceChangeHandler}\n            onBlur={spaceBlurHandler}\n          />\n        </div>\n        <div\n          className={`${classes.control} ${urlError ? classes.invalid : \"\"}`}\n        >\n          <label htmlFor=\"url\">URL del espacio (direccion web)</label>\n          <TextField\n            type=\"text\"\n            id=\"url\"\n            variant=\"outlined\"\n            fullWidth\n            placeholder=\"Ep: mi.dominio\"\n            value={urlValue}\n            onChange={urlChangeHandler}\n            onBlur={urlBlurHandler}\n            \n            InputProps={{\n              endAdornment: \n              <InputAdornment position=\"end\">\n                .dofleine.com\n              </InputAdornment>\n            }}\n          />\n        </div>\n\n        <section className={classes.info}>\n          <img src={warning} alt=\"logo\" />\n          <div className={classes.warning}>\n            <p>\n              Puedes cambiar la URL de tu espacio (dirección web) en cualquier\n              momento, pero por cortesía hacia tus compañeros de trabajo y otros\n              usuarios de Plankton, porfavor no lo hagas muy seguido :)\n            </p>\n            <p>\n              Nota: Si cambias la URL de tu espacio, Plankton automáticamente\n              redireccionará desde la antigua dirección hacia la nueva. En\n              cualquier caso, deberías asegurarte que tus compañeros sepan\n              acerca del cambio porque la dirección anterior pasará a estar\n              libre y puede ser usada por otro espacio en el futuro.\n            </p>\n          </div>\n        </section>\n\n        <section>\n          <span>¿Cuántas personas trabajarán contigo, incluyéndote a ti?</span>\n          <div className={classes.peopleNumber}>\n            <ToggleButtonGroup color=\"primary\" value={peopleNumber} exclusive onChange={peopleNumberHandler} fullWidth={false}>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"Sólo yo\"\n              >\n                Sólo yo\n              </ToggleButton>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"2-10\"\n              >\n                2-10\n              </ToggleButton>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"11-15\"\n              >\n                11-15\n              </ToggleButton>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"26-50\"\n              >\n                26-50\n              </ToggleButton>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"51-100\"\n              >\n                51-100\n              </ToggleButton>\n              <ToggleButton\n                style={{\n                  outlineWidth: \"1px\",\n                  outlineStyle: \"solid\",\n                  margin: \"2px\",\n                }}\n                value=\"500+\"\n              >\n                500+\n              </ToggleButton>\n            </ToggleButtonGroup>\n          </div>\n\n          <section className={classes.info}>\n            <img src={warning} alt=\"logo\" />\n            <div className={classes.warning}>\n              <p>\n                Preferiblemente sube una imagen .png igual o superior a 65px a\n                72ppp con fondo transparente.\n              </p>\n            </div>\n          </section>\n        </section>\n\n        <section className={classes.theme}>\n          <h3>Color del tema</h3>\n          <div className={classes.picker}>\n            <RadioButton {...controlProps(\"#39B0FF\")} />\n            <RadioButton {...controlProps(\"#04B58B\")} />\n            <RadioButton {...controlProps(\"#3E9C4B\")} />\n            <RadioButton {...controlProps(\"#B6BC00\")} />\n            <RadioButton {...controlProps(\"#E59100\")} />\n            <RadioButton {...controlProps(\"#E55C00\")} />\n            <RadioButton {...controlProps(\"#EE1F50\")} />\n            <RadioButton {...controlProps(\"#D6198A\")} />\n            <RadioButton {...controlProps(\"#B321F1\")} />\n            <RadioButton {...controlProps(\"SketchPicker\")} />\n          </div>\n        </section>\n\n        <section className={classes.theme}>\n          <h3>Privacidad del espacio</h3>\n          <div className={classes.privacy}>\n            <RadioCard\n              {...controlCardPro(\"Privado\")}\n              description=\"El contenido será visible sólo para tí y los miembros de tu Organización.\"\n            />\n            <RadioCard\n              {...controlCardPro(\"Público\")}\n              description=\"Cualquiera con el vínculo podrá ver la actividad de tu Organización\"\n            />\n          </div>\n        </section>\n        <div className={classes.actions}>\n          <Button\n            disabled={!formIsValid}\n            type=\"submit\"\n            variant=\"contained\"\n            size=\"large\"\n            sx={{\n              fontSize: 14,\n              height: 5,\n              padding: 3.2,\n              textTransform: \"none\",\n              marginRight: 2,\n            }}\n          >\n            Guardar cambios\n          </Button>\n          <Button\n            color=\"inherit\"\n            variant=\"outlined\"\n            size=\"large\"\n            sx={{\n              fontSize: 14,\n              height: 5,\n              padding: 3.2,\n              textTransform: \"none\",\n              marginRight: 2,\n            }}\n          >\n            Descartar\n          </Button>\n        </div>\n      </form>\n    </Card>\n  );\n};\n\nexport default Login;\n","D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\Button\\Button.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\Card\\Card.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\RadioButton\\RadioButton.js",["82","83"],"D:\\develop\\project-reacjs\\prueba\\src\\hooks\\use-inputs.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\store\\space-slice.js",[],"D:\\develop\\project-reacjs\\prueba\\src\\components\\UI\\RadioCard\\RadioCard.js",["84"],"import React from \"react\";\r\nimport Radio from \"@mui/material/Radio\";\r\nimport classes from \"./RadioCard.module.css\";\r\nimport { useState } from \"react\";\r\n\r\nconst RadioCard = (props) => {\r\n  const { name, value, description, fontSize, color, checked, onChange } = props;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div className={` ${classes[\"container-radio\"] } ${checked ? classes.active : ''}`}>\r\n        <Radio          \r\n          name={name}\r\n          value={color}\r\n          checked={checked}\r\n          onChange={onChange}\r\n          sx={{\r\n            padding: '0px',\r\n            color: color,\r\n            background: color,\r\n            \"&.Mui-checked\": {\r\n              color: color, // #FCB900\r\n              background: \"#fff\", // #9900EF\r\n            },\r\n            \"& .MuiSvgIcon-root\": {\r\n              fontSize: fontSize,\r\n            },\r\n          }}\r\n        />\r\n        <div className={classes.message}>\r\n          <div className={`${checked ? classes[\"title-active\"] : classes.title}`} >{value}</div>\r\n          <div className={classes.description}>{description}</div>\r\n      </div>\r\n      </div>\r\n      \r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default RadioCard;\r\n",{"ruleId":"85","replacedBy":"86"},{"ruleId":"87","replacedBy":"88"},{"ruleId":"89","severity":1,"message":"90","line":26,"column":7,"nodeType":"91","messageId":"92","endLine":26,"endColumn":17},{"ruleId":"89","severity":1,"message":"93","line":90,"column":9,"nodeType":"91","messageId":"92","endLine":90,"endColumn":14},{"ruleId":"89","severity":1,"message":"94","line":5,"column":20,"nodeType":"91","messageId":"92","endLine":5,"endColumn":29},{"ruleId":"89","severity":1,"message":"95","line":9,"column":10,"nodeType":"91","messageId":"92","endLine":9,"endColumn":21},{"ruleId":"89","severity":1,"message":"96","line":4,"column":10,"nodeType":"91","messageId":"92","endLine":4,"endColumn":18},"no-native-reassign",["97"],"no-negated-in-lhs",["98"],"no-unused-vars","'isNotEmpty' is assigned a value but never used.","Identifier","unusedVar","'reset' is assigned a value but never used.","'useEffect' is defined but never used.","'activeColor' is assigned a value but never used.","'useState' is defined but never used.","no-global-assign","no-unsafe-negation"]